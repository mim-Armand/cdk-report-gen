{
 "Resources": {
  "MainDeadLetterQueue7799BD89": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "MainDeadLetterQueue-4990"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkStack/MainDeadLetterQueue/Resource"
   }
  },
  "MainQueueD24C6076": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "MainQueue-4990",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "MainDeadLetterQueue7799BD89",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 900
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkStack/MainQueue/Resource"
   }
  },
  "apigw88C2FCEE": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "ApiKeySourceType": "HEADER",
    "Description": "This service generates reports based on msgs it receives from sqs",
    "DisableExecuteApiEndpoint": false,
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "report-gen-01"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Resource"
   }
  },
  "apigwDeployment30AED7094a1057cb6820a70d50b49465ff12817e": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service generates reports based on msgs it receives from sqs",
    "RestApiId": {
     "Ref": "apigw88C2FCEE"
    }
   },
   "DependsOn": [
    "apigwOPTIONS4619C10E",
    "apigwPOSTE6A70D9C"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Deployment/Resource"
   }
  },
  "apigwDeploymentStageprod4210E34E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "apigwDeployment30AED7094a1057cb6820a70d50b49465ff12817e"
    },
    "RestApiId": {
     "Ref": "apigw88C2FCEE"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/DeploymentStage.prod/Resource"
   }
  },
  "apigwOPTIONS4619C10E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "apigw88C2FCEE",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apigw88C2FCEE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Default/OPTIONS/Resource"
   }
  },
  "apigwPOSTApiPermissionCdkStackapigwE1329013POST6C53783A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaPostReportABBDCD26",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigw88C2FCEE"
       },
       "/",
       {
        "Ref": "apigwDeploymentStageprod4210E34E"
       },
       "/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Default/POST/ApiPermission.CdkStackapigwE1329013.POST.."
   }
  },
  "apigwPOSTApiPermissionTestCdkStackapigwE1329013POSTE3271F12": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaPostReportABBDCD26",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigw88C2FCEE"
       },
       "/test-invoke-stage/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Default/POST/ApiPermission.Test.CdkStackapigwE1329013.POST.."
   }
  },
  "apigwPOSTE6A70D9C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "lambdaPostReportABBDCD26",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "apigw88C2FCEE",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apigw88C2FCEE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/apigw/Default/POST/Resource"
   }
  },
  "functionServiceRoleEF216095": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/function/ServiceRole/Resource"
   }
  },
  "functionServiceRoleDefaultPolicy5ACF569A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MainDeadLetterQueue7799BD89",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MainQueueD24C6076",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "functionServiceRoleDefaultPolicy5ACF569A",
    "Roles": [
     {
      "Ref": "functionServiceRoleEF216095"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/function/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "functionF19B1A04": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:7c6ec93952fd7aa7b5c48bac560694a4e5acebe88c20914ddd7f4697af8fc188"
     }
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "MainDeadLetterQueue7799BD89",
       "Arn"
      ]
     }
    },
    "Description": "Lambda function from docker image that will generate reports based on msgs it receives from sqs",
    "Environment": {
     "Variables": {
      "MAIN_QUEUE_URL": {
       "Ref": "MainQueueD24C6076"
      },
      "HANDLER_NAME": "index"
     }
    },
    "EphemeralStorage": {
     "Size": 1024
    },
    "FunctionName": "report-gen-01-4990",
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "functionServiceRoleEF216095",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "functionServiceRoleDefaultPolicy5ACF569A",
    "functionServiceRoleEF216095"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/function/Resource",
    "aws:asset:path": "asset.7c6ec93952fd7aa7b5c48bac560694a4e5acebe88c20914ddd7f4697af8fc188",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "functionSqsEventSourceCdkStackMainQueue95A94DE21F84E2A0": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 6,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "MainQueueD24C6076",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "functionF19B1A04"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/function/SqsEventSource:CdkStackMainQueue95A94DE2/Resource"
   }
  },
  "functionLogRetention74915272": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "functionF19B1A04"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/function/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "lambdaPostReportServiceRole2AE29D9D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/lambdaPostReport/ServiceRole/Resource"
   }
  },
  "lambdaPostReportServiceRoleDefaultPolicy81E70681": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MainDeadLetterQueue7799BD89",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lambdaPostReportServiceRoleDefaultPolicy81E70681",
    "Roles": [
     {
      "Ref": "lambdaPostReportServiceRole2AE29D9D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/lambdaPostReport/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "lambdaPostReportABBDCD26": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:7c6ec93952fd7aa7b5c48bac560694a4e5acebe88c20914ddd7f4697af8fc188"
     }
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "MainDeadLetterQueue7799BD89",
       "Arn"
      ]
     }
    },
    "Description": "Lambda function that will post a report to sqs",
    "Environment": {
     "Variables": {
      "MAIN_QUEUE_URL": {
       "Ref": "MainQueueD24C6076"
      },
      "HANDLER_NAME": "postReportHandler"
     }
    },
    "EphemeralStorage": {
     "Size": 1024
    },
    "FunctionName": "report-gen-01-post-report-4990",
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "lambdaPostReportServiceRole2AE29D9D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "lambdaPostReportServiceRoleDefaultPolicy81E70681",
    "lambdaPostReportServiceRole2AE29D9D"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/lambdaPostReport/Resource",
    "aws:asset:path": "asset.7c6ec93952fd7aa7b5c48bac560694a4e5acebe88c20914ddd7f4697af8fc188",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "lambdaPostReportInvokeByApiGateway5950EA71": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaPostReportABBDCD26",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/lambdaPostReport/InvokeByApiGateway"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VRy07DMBD8Fu6OUSgHOPYBEhIVJf2AynWW4CbxmqzdKory73gdGlXitOOZ9cx6/SDz/FHmd+pCmS7rrDFHOey90rWI1GGgH5LDZ4AAYv1lExiFcqZSHi6ql0MB5JfOsHqFG3AN9i1Yz+zNKfpWyWcCsR9Dp2GlCMQW/DeWLE5oFI1qj6WSQ6R20LWGyKAVG9Q1dG9tNHgNVnvmYseMX84xaZ98t8o5YyuW/7OjMKqN42OTJkp1h43RPR8nNArQ3UERgSd5E7xkhjVZgEMyHrs+PaLBiuQ7VgX4mMfj0OJ6f7pEC7kK0chz/8hRH8G74OdliNTHC/obfRYiXqMtDfuOwmIJ8kT35/xJPscPPJExWRdiaguymOovhbWM/90BAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "apigwEndpoint65DB08D1": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "apigw88C2FCEE"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "apigwDeploymentStageprod4210E34E"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "report-gen-01-endpoint"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}